openapi: 3.0.3
info:
  title: ESP32 Web Server API
  description: |-
    This is a sample ESP32 Web Server.
  # termsOfService: http://swagger.io/terms/
  contact:
    email: igor.v.perkovsky@gmail.com
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
# externalDocs:
#   description: Find out more aboutESP32 Web Server
#   url: http://swagger.io
# servers:
#   - url: https://esp32.swagger.io/api/v3
tags:
  - name: Dashboard
    # description: Everything about Dashboard
    # externalDocs:
    #   description: Find out more
    #   url: http://swagger.io
paths:
  /temperature:
    get:
      tags:
        - Dashboard
      summary: Get temperature
      description: Get temperature with the DHT11 or DHT22
      operationId: getTemperature
      responses:
        '200':
          description: successful operation
          content:
           text/plain:
              schema:
                type: number
      security:
        - api_key: []
  /humidity:
    get:
      tags:
        - Dashboard
      summary: Get humidity
      description: Get humidity with the DHT11 or DHT22
      operationId: getHumidity
      responses:
        '200':
          description: successful operation
          content:
           text/plain:
              schema:
                type: number
      security:
        - api_key: []
  /led-blue-status:
    get:
      tags:
        - Dashboard
      summary: Get blue LED status
      description: 'Get blue LED status: on/off (true/false)'
      operationId: getLedBlueStatus
      responses:
        '200':
          description: successful operation
          content:
           text/plain:
              schema:
                type: boolean
      security:
        - api_key: []
  /led-red-status:
    get:
      tags:
        - Dashboard
      summary: Get red LED status
      description: 'Get red LED status: on/off (true/false)'
      operationId: getLedRedStatus
      responses:
        '200':
          description: successful operation
          content:
           text/plain:
              schema:
                type: boolean
      security:
        - api_key: []
  /toggle-led-blue:
    post:
      tags:
        - Dashboard
      summary: Toggle blue LED
      description: Toggle blue LED
      operationId: toggleLedBlue
      requestBody:
        description: On/Off blue LED
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleLedRequestModel'
        required: true
      responses:
        '204':
          description: Successful operation
        '400':
          description: Bad reqiest
  /toggle-led-red:
    post:
      tags:
        - Dashboard
      summary: Toggle red LED
      description: Toggle red LED
      operationId: toggleLedRed
      requestBody:
        description: On/Off red LED
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleLedRequestModel'
        required: true
      responses:
        '204':
          description: Successful operation
        '400':
          description: Bad reqiest
components:
  schemas:
    ToggleLedRequestModel:
      required:
        - value
      type: object
      properties:
        value:
          type: integer
          format: int64
          example: 1
  requestBodies:
    ToggleLedRequestModel:
      description: 'The parameter has two possible values: 0 or 1.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ToggleLedRequestModel'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header